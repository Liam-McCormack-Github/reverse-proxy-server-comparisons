services:
  target-server:
    labels:
      - "io.telegraf.group.name=target-server"
    build:
      context: ./target-server
      dockerfile: ./go-target-server/Dockerfile
      # dockerfile: ./python-target-server/Dockerfile
      args:
        - TARGET_SERVER_PORT=${TARGET_SERVER_PORT}
    ports:
      - "${TARGET_SERVER_PORT}:${TARGET_SERVER_PORT}"
    environment:
      - TARGET_SERVER_PORT=${TARGET_SERVER_PORT}
      - TARGET_SERVER_HOST=${TARGET_SERVER_HOST}
    networks:
      - monitoring-net

  go-proxy:
    labels:
      - "io.telegraf.group.name=go-proxy"
    build:
      context: ./go-proxy
      args:
        - GO_PROXY_SERVER_PORT=${GO_PROXY_SERVER_PORT}
    ports:
      - "${GO_PROXY_SERVER_PORT}:${GO_PROXY_SERVER_PORT}"
    environment:
      - GO_PROXY_SERVER_PORT=${GO_PROXY_SERVER_PORT}
      - TARGET_SERVER_HOST=target-server
      - TARGET_SERVER_PORT=${TARGET_SERVER_PORT}
      - GO_PROXY_ADMIN_ID=${GO_PROXY_ADMIN_ID}
      - GO_PROXY_ADMIN_SECRET=${GO_PROXY_ADMIN_SECRET}
      - GO_PROXY_REAUTH_COOLDOWN_MS=${GO_PROXY_REAUTH_COOLDOWN_MS}
      - GO_PROXY_RETRY_ATTEMPTS=${GO_PROXY_RETRY_ATTEMPTS}
      - GO_PROXY_RETRY_INTERVAL_MS=${GO_PROXY_RETRY_INTERVAL_MS}
    depends_on:
      - target-server
    networks:
      - monitoring-net

  java-proxy:
    labels:
      - "io.telegraf.group.name=java-proxy"
    build:
      context: ./java-proxy
      args:
        - JAVA_PROXY_SERVER_PORT=${JAVA_PROXY_SERVER_PORT}
    ports:
      - "${JAVA_PROXY_SERVER_PORT}:${JAVA_PROXY_SERVER_PORT}"
    environment:
      - JAVA_PROXY_SERVER_PORT=${JAVA_PROXY_SERVER_PORT}
      - TARGET_SERVER_HOST=target-server
      - TARGET_SERVER_PORT=${TARGET_SERVER_PORT}
      - JAVA_PROXY_ADMIN_ID=${JAVA_PROXY_ADMIN_ID}
      - JAVA_PROXY_ADMIN_SECRET=${JAVA_PROXY_ADMIN_SECRET}
      - JAVA_PROXY_REAUTH_COOLDOWN_MS=${JAVA_PROXY_REAUTH_COOLDOWN_MS}
      - JAVA_PROXY_RETRY_ATTEMPTS=${JAVA_PROXY_RETRY_ATTEMPTS}
      - JAVA_PROXY_RETRY_INTERVAL_MS=${JAVA_PROXY_RETRY_INTERVAL_MS}
    depends_on:
      - target-server
    networks:
      - monitoring-net

  node-proxy:
    labels:
      - "io.telegraf.group.name=node-proxy"
    build:
      context: ./node-proxy
      args:
        - NODE_PROXY_SERVER_PORT=${NODE_PROXY_SERVER_PORT}
    ports:
      - "${NODE_PROXY_SERVER_PORT}:${NODE_PROXY_SERVER_PORT}"
    environment:
      - NODE_PROXY_SERVER_PORT=${NODE_PROXY_SERVER_PORT}
      - TARGET_SERVER_HOST=target-server
      - TARGET_SERVER_PORT=${TARGET_SERVER_PORT}
      - NODE_PROXY_ADMIN_ID=${NODE_PROXY_ADMIN_ID}
      - NODE_PROXY_ADMIN_SECRET=${NODE_PROXY_ADMIN_SECRET}
      - NODE_PROXY_REAUTH_COOLDOWN_MS=${NODE_PROXY_REAUTH_COOLDOWN_MS}
      - NODE_PROXY_RETRY_ATTEMPTS=${NODE_PROXY_RETRY_ATTEMPTS}
      - NODE_PROXY_RETRY_INTERVAL_MS=${NODE_PROXY_RETRY_INTERVAL_MS}
    depends_on:
      - target-server
    networks:
      - monitoring-net

  influxdb:
    labels:
      - "io.telegraf.group.name=influxdb"
    image: influxdb:1.8
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb/data:/var/lib/influxdb
      - ./influxdb/init:/docker-entrypoint-initdb.d
    environment:
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_HTTP_MAX_BODY_SIZE=0
    networks:
      - monitoring-net

  telegraf:
    image: telegraf:1.29.5
    restart: unless-stopped
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    networks:
      - monitoring-net
    environment:
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}

  manual-test:
    build:
      context: ./tests/manual
    env_file: .env
    entrypoint: /bin/sh
    command: -c "sleep infinity"
    stdin_open: true
    tty: true
    networks:
      - monitoring-net

networks:
  monitoring-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.222.0/24
